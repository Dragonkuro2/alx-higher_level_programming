The ``5-text_indentation`` module
============================================

Using ``text_indentation``
--------------------------------

``text_indentation()`` prints a text with 2 new lines after each of these characters: ., ?

Importing the function matrix_divided.
	>>> text_indentation = __import__('5-text_indentation').text_indentation

Try the given text.
	>>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere?""")
	Lorem ipsum dolor sit amet, consectetur adipiscing elit.
	<BLANKLINE>
	Quonam modo?
	<BLANKLINE>
	Utrum igitur tibi litteram videor an totas paginas commovere?
	<BLANKLINE>

Try an empty string.
	>>> text_indentation("")
	

Try a text with space at the beginning.
	>>> text_indentation("        Hello Brother")
	Hello Brother

Printing a word with spaces around it.
	>>> text_indentation("    Hello    ")
	Hello

Printing a word with a special character at the end.
	>>> text_indentation("    Hello    .")
	Hello.
	<BLANKLINE>

Try a text with space between words and a special character at end.
	>>> text_indentation("How are you baby?    I hope you are fine?")
	How are you baby?
	<BLANKLINE>
	I hope you are fine?
	<BLANKLINE>

Try a non-string as text.
	>>> text_indentation(2005)
	Traceback (most recent call last):
	...
	TypeError: text must be a string

Try None as text:
	>>> text_indentation(None)
	Traceback (most recent call last):
	...
	TypeError: text must be a string

Try no arguments to text_indentation.
	>>> text_indentation()
	Traceback (most recent call last):
	...
	TypeError: text_indentation() missing 1 required positional argument: 'text'

Try more than one argument to text_indentation.
	>>> text_indentation("Hey", "Mate!")
	Traceback (most recent call last):
	...
	TypeError: text_indentation() takes 1 positional argument but 2 were given
