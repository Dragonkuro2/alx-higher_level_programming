The ``4-print_square`` module
============================

Using ``print_square``
---------------------

Import module:
	>>> print_square = __import__('4-print_square').print_square

Try normal print 0:
	>>> print_square(0)

Try normal print 1:
	>>> print_square(1)
	#

Try normal print 2:
	>>> print_square(2)
	##
	##

Try normal print 3:
	>>> print_square(3)
	###
	###
	###

Try normal print 10:
	>>> print_square(10)
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########
	##########

Try negative:
	>>> print_square(-90)
	Traceback (most recent call last):
	...
	ValueError: size must be >= 0

Try float:
	>>> print_square(12.5)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

Try string:
	>>> print_square("b")
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

Try none:
	>>> print_square(None)
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

Try infinit:
	>>> print_square(float('inf'))
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

Try nan:
	>>> print_square(float('nan'))
	Traceback (most recent call last):
	...
	TypeError: size must be an integer

Missing arguments:
	>>> print_square()
	Traceback (most recent call last):
	...
	TypeError: print_square() missing 1 required positional argument: 'size'
